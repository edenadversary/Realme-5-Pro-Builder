name: Build Kernel
on:
  workflow_dispatch:
    inputs:
      REPO:
        description: Kernel Repo
        default: 'edenadversary/kernel_realme_sdm710'
        required: true
      BRANCH:
        description: Kernel branch
        default: 'r5p-ksu'
        required: true
      KSU_OPT:
        description: "Choose KernelSU version"
        required: true
        type: choice
        options:
          - "None"
          - "SukiSU Ultra + SuSFS"
          - "KernelSU-Next"
          - "RKSU + SuSFS"
          - "RKSU Non-SuSFS"
          - "SukiSU Non-GKI"
      USE_PERSONAL:
        description: Use Personal defconfig
        type: boolean
        default: true
        
jobs:
  build:
    runs-on: ubuntu-latest
    environment: secureEnvironment
    steps:
    - name: Get date
      id: rundate
      run: sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Asia/Jakarta /etc/localtime && echo "REPO_DATE=`date`" >> $GITHUB_OUTPUT
    
    - uses: actions/checkout@v4
      with:
        path: kernel_root
        repository: ${{ github.event.inputs.REPO }}
        ref: ${{ github.event.inputs.BRANCH }}
        show-progress: false
        fetch-depth: 1

    - name: Prepare dependencies
      run: |
        sudo apt update -y
        sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget aria2 curl lz4 -y
        sudo aptitude install libssl-dev -y

    - name: Regen defconfig
      id: buildKernel
      run: |
        export IS_CI=true
        git clone https://github.com/edenadversary/${GITHUB_REPOSITORY#*/} ~/tmp_repo --single-branch
        mv ~/tmp_repo/build.sh . && mv ~/tmp_repo/godspeed_defconfig ./arch/arm64/configs/
        gitsha1=$(git rev-parse --short HEAD)
        buildDetails="`make kernelversion`-${{ github.event.inputs.KSU_OPT }}-RMX1971_`echo $gitsha1`-`date +'%Y%m%d%H%M%S'`" && echo "buildDetails=$buildDetails" >> $GITHUB_OUTPUT
      working-directory: kernel_root

    - name: "KernelSU check"
      working-directory: kernel_root
      run: |
          if [ "${{ github.event.inputs.KSU_OPT }}" == "None" ]; then
            echo "Non-KSU Build"
          else
            echo "KSU Build"
          fi

    - name: "Update RKSU Non-SuSFS"
      working-directory: kernel_root
      if: ${{ github.event.inputs.KSU_OPT == 'RKSU Non-SuSFS' }}
      run: |
          if [ -d "./KernelSU" ]; then
            rm -rf "./KernelSU"
          fi
          if [ -d "./drivers/kernelsu" ]; then
            rm -rf "./drivers/kernelsu"
          fi

          curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash -s main
 
    - name: "Update RKSU + SuSFS"
      working-directory: kernel_root
      if: ${{ github.event.inputs.KSU_OPT == 'RKSU + SuSFS' }}
      run: |
          if [ -d "./KernelSU" ]; then
            rm -rf "./KernelSU"
          fi
          if [ -d "./drivers/kernelsu" ]; then
            rm -rf "./drivers/kernelsu"
          fi

          curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash -s susfs-main

    - name: "Update KernelSU-Next"
      working-directory: kernel_root
      if: ${{ github.event.inputs.KSU_OPT == 'KernelSU-Next' }}
      run: |
          if [ -d "./KernelSU-Next" ]; then
            rm -rf "./KernelSU-Next"
          fi
          if [ -d "./drivers/kernelsu" ]; then
            rm -rf "./drivers/kernelsu"
          fi

          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -s

    - name: "Update SukiSU Non-GKI"
      working-directory: kernel_root
      if: ${{ github.event.inputs.KSU_OPT == 'SukiSU Non-GKI' }}
      run: |
          if [ -d "./KernelSU" ]; then
            rm -rf "./KernelSU"
          fi
          if [ -d "./drivers/kernelsu" ]; then
            rm -rf "./drivers/kernelsu"
          fi
              
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s main 

    - name: "Update SukiSU Ultra + SuSFS"
      working-directory: kernel_root
      if: ${{ github.event.inputs.KSU_OPT == 'SukiSU Ultra + SuSFS' }}
      run: |
          if [ -d "./KernelSU" ]; then
            rm -rf "./KernelSU"
          fi
          if [ -d "./drivers/kernelsu" ]; then
            rm -rf "./drivers/kernelsu"
          fi
              
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-1.5.7 

    - name: Build kernel
      run: |
        if [[ "${{ github.event.inputs.USE_PERSONAL }}" = "true" ]]; then
          export USE_PERSONAL_DEFCONFIG=true
        else
          export USE_PERSONAL_DEFCONFIG=false
        fi
        bash ./build.sh
        if [ -e $(pwd)/out/.config ]; then
          mv out/.config out/defconfig
        fi
        if [ -e $(pwd)/out/arch/arm64/boot/Image ]; then
          rm $(pwd)/out/arch/arm64/boot/Image
        fi
      working-directory: kernel_root

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build-${{ steps.buildKernel.outputs.buildDetails }}
        path: kernel_root/out/arch/arm64/boot/*
        compression-level: 9

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-${{ steps.buildKernel.outputs.buildDetails }}
        path: kernel_root/AnyKernel3-eden/*
        compression-level: 9

    - name: Upload configs complete
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: Defconfig-${{ steps.buildKernel.outputs.buildDetails }}
        path: kernel_root/out/defconfig

    - name: Cleanup useless files
      continue-on-error: true
      run: |
        rm out/vmlinux.o out/vmlinux out/System.map
      working-directory: kernel_root
